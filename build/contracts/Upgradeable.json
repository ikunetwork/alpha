{
  "contractName": "Upgradeable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506101fb806100206000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635c60da1b14610051578063c4d66de8146100a8575b600080fd5b34801561005d57600080fd5b506100666100de565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100dc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610108565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6d73672e73656e64657220213d2072656769737472790000000000000000000081525060200191505060405180910390fd5b505600a165627a7a72305820bc563016d484548fae8c352da7b40a9b3ebd07437a7b1675875df28340317daa0029",
  "deployedBytecode": "0x60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635c60da1b14610051578063c4d66de8146100a8575b600080fd5b34801561005d57600080fd5b506100666100de565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100dc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610108565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6d73672e73656e64657220213d2072656769737472790000000000000000000081525060200191505060405180910390fd5b505600a165627a7a72305820bc563016d484548fae8c352da7b40a9b3ebd07437a7b1675875df28340317daa0029",
  "sourceMap": "307:390:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;307:390:11;;;;;;;",
  "deployedSourceMap": "307:390:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;480:89:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;480:89:10;;;;;;;;;;;;;;;;;;;;;;;;;;;567:128:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;480:89:10;527:7;549:15;;;;;;;;;;;542:22;;480:89;:::o;567:128:11:-;654:8;;;;;;;;;;;632:31;;:10;:31;;;624:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;567:128;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport './UpgradeabilityStorage.sol';\n\n/**\n * @title Upgradeable\n * @dev This contract holds all the minimum required functionality for a behavior to be upgradeable.\n * This means, required state variables for owned upgradeability purpose and simple initialization validation.\n */\ncontract Upgradeable is UpgradeabilityStorage {\n  /**\n  * @dev Validates the caller is the versions registry.\n  * THIS FUNCTION SHOULD BE OVERRIDDEN CALLING SUPER\n  * @param sender representing the address deploying the initial behavior of the contract\n  */\n  function initialize(address sender) public payable {\n    require(msg.sender == address(registry), 'msg.sender != registry');\n  }\n}",
  "sourcePath": "/Users/vcrizpy/Desktop/dapps/gitcoin/Upgradable/alpha/contracts/upgradability/Upgradeable.sol",
  "ast": {
    "absolutePath": "/Users/vcrizpy/Desktop/dapps/gitcoin/Upgradable/alpha/contracts/upgradability/Upgradeable.sol",
    "exportedSymbols": {
      "Upgradeable": [
        670
      ]
    },
    "id": 671,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 650,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/Users/vcrizpy/Desktop/dapps/gitcoin/Upgradable/alpha/contracts/upgradability/UpgradeabilityStorage.sol",
        "file": "./UpgradeabilityStorage.sol",
        "id": 651,
        "nodeType": "ImportDirective",
        "scope": 671,
        "sourceUnit": 649,
        "src": "26:37:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 652,
              "name": "UpgradeabilityStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 648,
              "src": "331:21:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradeabilityStorage_$648",
                "typeString": "contract UpgradeabilityStorage"
              }
            },
            "id": 653,
            "nodeType": "InheritanceSpecifier",
            "src": "331:21:11"
          }
        ],
        "contractDependencies": [
          648
        ],
        "contractKind": "contract",
        "documentation": "@title Upgradeable\n@dev This contract holds all the minimum required functionality for a behavior to be upgradeable.\nThis means, required state variables for owned upgradeability purpose and simple initialization validation.",
        "fullyImplemented": true,
        "id": 670,
        "linearizedBaseContracts": [
          670,
          648
        ],
        "name": "Upgradeable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 668,
              "nodeType": "Block",
              "src": "618:77:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 659,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2293,
                            "src": "632:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "632:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 662,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 637,
                              "src": "654:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistry_$457",
                                "typeString": "contract IRegistry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IRegistry_$457",
                                "typeString": "contract IRegistry"
                              }
                            ],
                            "id": 661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "646:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "646:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "632:31:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d73672e73656e64657220213d207265676973747279",
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "665:24:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18372a741482ae3a93b6ca24289ac995407dcc8223d48804ebdc3589776e5afd",
                          "typeString": "literal_string \"msg.sender != registry\""
                        },
                        "value": "msg.sender != registry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18372a741482ae3a93b6ca24289ac995407dcc8223d48804ebdc3589776e5afd",
                          "typeString": "literal_string \"msg.sender != registry\""
                        }
                      ],
                      "id": 658,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2296,
                        2297
                      ],
                      "referencedDeclaration": 2297,
                      "src": "624:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "624:66:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "624:66:11"
                }
              ]
            },
            "documentation": "@dev Validates the caller is the versions registry.\nTHIS FUNCTION SHOULD BE OVERRIDDEN CALLING SUPER\n@param sender representing the address deploying the initial behavior of the contract",
            "id": 669,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 655,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 669,
                  "src": "587:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "586:16:11"
            },
            "payable": true,
            "returnParameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "618:0:11"
            },
            "scope": 670,
            "src": "567:128:11",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 671,
        "src": "307:390:11"
      }
    ],
    "src": "0:697:11"
  },
  "legacyAST": {
    "absolutePath": "/Users/vcrizpy/Desktop/dapps/gitcoin/Upgradable/alpha/contracts/upgradability/Upgradeable.sol",
    "exportedSymbols": {
      "Upgradeable": [
        670
      ]
    },
    "id": 671,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 650,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/Users/vcrizpy/Desktop/dapps/gitcoin/Upgradable/alpha/contracts/upgradability/UpgradeabilityStorage.sol",
        "file": "./UpgradeabilityStorage.sol",
        "id": 651,
        "nodeType": "ImportDirective",
        "scope": 671,
        "sourceUnit": 649,
        "src": "26:37:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 652,
              "name": "UpgradeabilityStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 648,
              "src": "331:21:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradeabilityStorage_$648",
                "typeString": "contract UpgradeabilityStorage"
              }
            },
            "id": 653,
            "nodeType": "InheritanceSpecifier",
            "src": "331:21:11"
          }
        ],
        "contractDependencies": [
          648
        ],
        "contractKind": "contract",
        "documentation": "@title Upgradeable\n@dev This contract holds all the minimum required functionality for a behavior to be upgradeable.\nThis means, required state variables for owned upgradeability purpose and simple initialization validation.",
        "fullyImplemented": true,
        "id": 670,
        "linearizedBaseContracts": [
          670,
          648
        ],
        "name": "Upgradeable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 668,
              "nodeType": "Block",
              "src": "618:77:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 659,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2293,
                            "src": "632:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "632:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 662,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 637,
                              "src": "654:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistry_$457",
                                "typeString": "contract IRegistry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IRegistry_$457",
                                "typeString": "contract IRegistry"
                              }
                            ],
                            "id": 661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "646:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "646:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "632:31:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d73672e73656e64657220213d207265676973747279",
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "665:24:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18372a741482ae3a93b6ca24289ac995407dcc8223d48804ebdc3589776e5afd",
                          "typeString": "literal_string \"msg.sender != registry\""
                        },
                        "value": "msg.sender != registry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18372a741482ae3a93b6ca24289ac995407dcc8223d48804ebdc3589776e5afd",
                          "typeString": "literal_string \"msg.sender != registry\""
                        }
                      ],
                      "id": 658,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2296,
                        2297
                      ],
                      "referencedDeclaration": 2297,
                      "src": "624:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "624:66:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "624:66:11"
                }
              ]
            },
            "documentation": "@dev Validates the caller is the versions registry.\nTHIS FUNCTION SHOULD BE OVERRIDDEN CALLING SUPER\n@param sender representing the address deploying the initial behavior of the contract",
            "id": 669,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 655,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 669,
                  "src": "587:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "586:16:11"
            },
            "payable": true,
            "returnParameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "618:0:11"
            },
            "scope": 670,
            "src": "567:128:11",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 671,
        "src": "307:390:11"
      }
    ],
    "src": "0:697:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-08-28T08:57:59.652Z"
}